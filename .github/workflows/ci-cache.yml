on: push
name: CI-with-cache

env:
  LARAVEL_BYPASS_ENV_CHECK: 1

jobs:
  backend:
    runs-on: ubuntu-latest
    container:
      image: sunasteriskrnd/php-workspace:8.1-alpine

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Restore composer cache
        id: composer-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer install
        run: |
          composer install --ignore-platform-reqs

      - name: Composer caching
        uses: actions/cache/save@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: PHP CodeSniffer
        run: composer cs

      - name: PHPUnit
        env:
          APP_ENV: testing
        run: |
          echo 'memory_limit=-1' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini
          docker-php-ext-disable xdebug
          cp .env.example .env.testing
          php artisan key:generate --quiet
          php artisan migrate
          composer coverage

      - name: 'Upload coverage artifact'
        uses: actions/upload-artifact@v3
        with:
          name: Coverage
          path: coverage
          retention-days: 5

      - name: Composer analysis
        run: composer analyze -- --no-progress

  frontend:
    runs-on: ubuntu-latest
    container:
      image: node:16-alpine

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Restore yarn cache
        id: yarn-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install

      - name: Yarn caching
        uses: actions/cache/save@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: Yarn lint
        run: yarn lint

      - name: Yarn tests
        run: yarn test:unit

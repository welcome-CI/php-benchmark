version: 2.1

jobs:
  checkout: 
    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true      
    steps:
      - checkout 

      - persist_to_workspace:
            root: .
            paths:
                - .
  yarn-install:
    docker:
      - image: node:16-alpine
        environment:
          LARAVEL_BYPASS_ENV_CHECK: 1
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true

      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - cache-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - cache-

      - run:
          name: Yarn install
          command: yarn install

      - save_cache:
          key: cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - persist_to_workspace:
          root: .
          paths:
              - .

  eslint: 
    docker: 
      - image: node:14-alpine
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true

      - run: yarn lint --max-warnings 0

  composer-install: 
    docker: 
      - image: sunasteriskrnd/php-workspace:8.1-alpine
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true

      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - cache-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - cache-

      - run: composer install --ignore-platform-reqs
      
      - save_cache:
          key: cache-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - persist_to_workspace:
          root: .
          paths:
              - .

  php-code_sniffer: 
    docker: 
      - image: sunasteriskrnd/php-workspace:8.1-alpine
    steps: 
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true

      - run: composer cs
    
  composer-analysis: 
    docker: 
      - image: sunasteriskrnd/php-workspace:8.1-alpine
    steps: 
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true

      - run: composer analyze

  phpunit:
    docker:
      - image: sunasteriskrnd/php-workspace:8.1-alpine
        environment:
          APP_ENV: testing
          DB_HOST: localhost
          REDIS_HOST: localhost
      - image: postgres:10.8
        environment:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: PHPUnit
          command: |
            echo 'memory_limit=-1' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini
            docker-php-ext-disable xdebug
            cp .env.example .env.testing
            php artisan key:generate --quiet
            php artisan migrate
            composer coverage

      - store_artifacts:
          path: coverage
      - store_test_results:
          path: coverage/junit.xml

workflows:
  ci-with-cache:
    jobs:
      - checkout
      - yarn-install:
          requires:
            - checkout
      - composer-install:
          requires:
            - checkout
      - eslint:
          requires:
            - yarn-install
      - php-code_sniffer:
          requires:
            - composer-install
      - composer-analysis:
          requires:
            - composer-install
      - phpunit:
          requires:
            - composer-install



